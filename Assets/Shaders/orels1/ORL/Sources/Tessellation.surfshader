BEGIN_OPTIONS
  ShaderName "orels1/Source/Tessellation"
  Tessellation "Distance"
END_OPTIONS

BEGIN_PROPERTIES
  UI_TessHeader("# Tessellation & Displacement", Float) = 0
  [ToggleUI]UI_TessSHNote("!NOTE Bakery SH does not show up correctly on tessellated meshes at this point [BAKERY_SH]", Int) = 0
  _VertexHeight("Displacement Map", 2D) = "gray" {}
  _VertexHeightAmount("Displacement Amount", Range(0, 3)) = 0
  _VertexHeightOffset("Displacement Offset", Range(-1, 1)) = 0.5
  _TesselationFadeStart("Tessellation Fade Start", Float) = 5
  _TesselationFadeEnd("Tessellation Fade End", Float) = 20
	_TessSubdiv("Subdivison Level", Range(1, 40)) = 12
	[ToggleUI]UI_TessNote("!NOTE Some AMD GPUs can have issues with tessellation, be weary when using this", Int) = 0
END_PROPERTIES

BEGIN_CBUFFER
  half _VertexHeightAmount;
  half _VertexHeightOffset;
  half _TesselationFadeStart;
  half _TesselationFadeEnd;
  half _TessSubdiv;
END_CBUFFER

BEGIN_CODE
  TEXTURE2D(_VertexHeight);
  SAMPLER(sampler_VertexHeight);
  
  half3 OffsetVertex(VertexData v, half3 vertex, half height) {
    return vertex + v.normal * (height + _VertexHeightOffset) * _VertexHeightAmount;
  }
  
  void ModifyTessellatedVertex(inout VertexData v, inout ExtraV2F d)
   {
      half2 uv = v.texcoord0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
      half height = (SAMPLE_TEXTURE2D_LOD(_VertexHeight, sampler_VertexHeight, uv, 0).r * 2 - 1);
      half3 mainOffset = OffsetVertex(v, v.vertex.xyz, height);
      v.vertex.xyz = mainOffset;
   }
   
   float3 GetTessFactors ()
   {
      return half3(_TesselationFadeStart, _TesselationFadeEnd, _TessSubdiv);
   }
END_CODE
