BEGIN_OPTIONS
  ShaderName "orels1/Source/Vertex Animation"
END_OPTIONS

BEGIN_PROPERTIES
  [ToggleUI]UI_VertexAnimHeader("# Vertex Animation", Float) = 0
  
  // SPINNING
  [ToggleUI]UI_SpinHeader("## Spin", Int) = 0
  [KeywordEnum(None, Local, World)]SPIN("Spinning", Int) = 0
  _SpinAxis("Spin Axis [!SPIN_NONE]", Vector) = (0, 1, 0, 0)
  _SpinOrigin("Spin Origin Point [!SPIN_NONE]", Vector) = (0,0,0,0)
  [ToggleUI]UI_SpinOriginNote("!NOTE Spin Origin Point is considered in object's local space", Int) = 0
  _SpinSpeed("Spin Speed [!SPIN_NONE]", Float) = 1
  
  // FLOATING
  [ToggleUI]UI_FloatHeader("## Float", Int) = 0
  [KeywordEnum(None, Local, World)]FLOATING("Floating", Int) = 0
  _FloatAxis("Float Axis [!FLOATING_NONE]", Vector) = (0,1,0,0)
  _FloatSpeed("Float Speed [!FLOATING_NONE]", Float) = 1
  _FloatAmount("Float Amount [!FLOATING_NONE]", Float) = 0.2
  [ToggleUI]_FloatTwoWay("Two Way [!FLOATING_NONE]", Int) = 1
  [ToggleUI]UI_FloatNote("!NOTE Defines whether the object will go back and forth along the axis", Int) = 0
  
  // SCALING
  [ToggleUI]UI_ScaleHeader("## Scale", Int) = 0
  [KeywordEnum(None, Uniform)]SCALE("Scaling", Int) = 0
  _ScaleSpeed("Scale Speed [!SCALE_NONE]", Float) = 1
  _ScaleAmount("Scale Amount [!SCALE_NONE]", Float) = 0.5
END_PROPERTIES

BEGIN_DEFINES
  #pragma shader_feature_local _ SPIN_LOCAL SPIN_WORLD
  #pragma shader_feature_local _ FLOATING_LOCAL FLOATING_WORLD
  #pragma shader_feature_local _ SCALE_UNIFORM
  
  #if !defined(SPIN_WORLD) || !defined(SPIN_LOCAL)
    #define SPIN_NONE
  #endif
  #if !defined(FLOATING_WORLD) || !defined(FLOATING_LOCAL)
    #define FLOATING_NONE
  #endif
  #if !defined(SCALE_UNIFORM)
    #define SCALE_NONE
  #endif
END_DEFINES

BEGIN_CBUFFER
  int _Spin;
  int _SpinOrientation;
  half4 _SpinAxis;
  half _SpinSpeed;
  half4 _SpinOrigin;
  
  half4 _FloatAxis;
  half _FloatAmount;
  half _FloatSpeed;
  half _FloatTwoWay;
  
  half _ScaleSpeed;
  half _ScaleAmount;
END_CBUFFER

BEGIN_CODE
  void ModifyVertex(inout VertexData v, inout ExtraV2F d)
  {
    half3 wsVert = TransformObjectToWorld(v.vertex.xyz);
    half3 wsNormal = TransformObjectToWorld(v.normal.xyz);
    half factor = 0;
          
    #if defined(SPIN_LOCAL) || defined(SPIN_WORLD)
      half3 origin = _SpinOrigin.xyz;
      #if defined(SPIN_LOCAL)
        v.vertex.xyz = RotateAroundAxis(origin, v.vertex.xyz, _SpinAxis.xyz, _Time.y * _SpinSpeed);
        v.normal.xyz = RotateAroundAxis(origin, v.normal.xyz, _SpinAxis.xyz, _Time.y * _SpinSpeed);
      #elif defined(SPIN_WORLD)
        float3 scale = float3(
            length(unity_ObjectToWorld._m00_m10_m20),
            length(unity_ObjectToWorld._m01_m11_m21),
            length(unity_ObjectToWorld._m02_m12_m22)
        );
        half3 wsCenter = TransformObjectToWorld(origin);
        half3 vertRot = RotateAroundAxis(wsCenter, wsCenter + v.vertex.xyz * scale, _SpinAxis.xyz, _Time.y * _SpinSpeed);
        half3 normalRot = RotateAroundAxis(wsCenter, wsNormal, _SpinAxis.xyz, _Time.y * _SpinSpeed);
        
        v.vertex.xyz = TransformWorldToObject(half4(vertRot, 1)).xyz;
        v.normal.xyz = TransformWorldToObject(half4(normalRot, 1)).xyz;
      #endif
      wsVert = TransformObjectToWorld(v.vertex.xyz);
    #endif
    
    #if defined(FLOATING_LOCAL) || defined(FLOATING_WORLD)
      factor = sin(_Time.y * _FloatSpeed);
      factor = lerp((factor + 1) / 2, factor, _FloatTwoWay);
      
      #if defined(FLOATING_LOCAL)
      half3 axis = _FloatAxis.xyz;
      #elif defined(FLOATING_WORLD)
      half3 axis = normalize(TransformWorldToObject(half4(_FloatAxis.xyz + TransformObjectToWorld(half3(0,0,0)),1))).xyz;
      #endif
      v.vertex.xyz += factor * axis * _FloatAmount;
      wsVert = TransformObjectToWorld(v.vertex.xyz);
    #endif
    
    #if defined(SCALE_UNIFORM)
      factor = sin(_Time.y * _ScaleSpeed);
      v.vertex.xyz += factor * v.vertex.xyz * _ScaleAmount;
      wsVert = TransformObjectToWorld(v.vertex.xyz);
    #endif
  }
END_CODE
